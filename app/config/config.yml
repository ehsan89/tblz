imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: @FactoryUtilityBundle/Resources/config/services.yml }
    - { resource: @FactoryBlogBundle/Resources/config/services.yml }
    - { resource: @ApplicationSonataMediaBundle/Resources/config/services.yml }
    - { resource: @TablozMainBundle/Resources/config/services.yml }
    - { resource: @ApplicationShoppingBundle/Resources/config/services.yml }
    - { resource: @ApplicationShoppingBundle/Resources/config/parameters.yml }
    - { resource: @ApplicationShoppingBundle/Resources/config/twig.yml }

framework:
    #esi:             ~
    translator:      ~
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: %kernel.debug%
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    form:
        resources:
            - 'FactoryUtilityBundle:Form:fields.html.twig'
            - 'SonataAdminBundle:Form:silex_form_div_layout.html.twig'
            - 'SonataFormatterBundle:Form:formatter.html.twig'

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: true
#    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        entity_managers:
            default:
                auto_mapping: true
                mappings:
                    gedmo_translatable:
                        type: annotation
                        prefix: Gedmo\Translatable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                        alias: GedmoTranslatable # this one is optional and will default to the name set for the mapping
                        is_bundle: false
                    gedmo_translator:
                        type: annotation
                        prefix: Gedmo\Translator\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                        alias: GedmoTranslator # this one is optional and will default to the name set for the mapping
                        is_bundle: false
                    gedmo_loggable:
                        type: annotation
                        prefix: Gedmo\Loggable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                        alias: GedmoLoggable # this one is optional and will default to the name set for the mapping
                        is_bundle: false
                    gedmo_tree:
                        type: annotation
                        prefix: Gedmo\Tree\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                        alias: GedmoTree # this one is optional and will default to the name set for the mapping
                        is_bundle: false
                    FOSUserBundle: ~
                    SonataMediaBundle: ~
                    ApplicationSonataMediaBundle: ~
                    SonataUserBundle: ~
                    TablozUserBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: memory }


fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Tabloz\UserBundle\Entity\User
    registration:
        form:
            type: tabloz_user_registration
#    profile:
#        form:
#            type: tabloz_user_profile
#            

stof_doctrine_extensions:
    default_locale: fa_IR
    orm:
        default:
            timestampable: true
            tree: true
            translatable: true
            loggable: true


services:
    twig.extension.text:
        class: Twig_Extensions_Extension_Text
        tags:
            - { name: twig.extension }
        
        
sonata_admin:
    title:      Dashboard 
    # title_logo: /bundles/sonataadmin/logo_title.png
    templates:
        # default global templates
        layout:  SonataAdminBundle::layout.html.twig
#        layout:  SonataAdminBundle::standard_layout.html.twig
        ajax:    SonataAdminBundle::ajax_layout.html.twig
        short_object_description: ApplicationSonataMediaBundle:Helper:short-object-description.html.twig

        # default actions templates, should extend a global templates
        list:    SonataAdminBundle:CRUD:list.html.twig
        show:    SonataAdminBundle:CRUD:show.html.twig
        edit:    SonataAdminBundle:CRUD:edit.html.twig
        history: SonataAdminBundle:CRUD:history.html.twig
        preview: SonataAdminBundle:CRUD:preview.html.twig
        delete:  SonataAdminBundle:CRUD:delete.html.twig
    dashboard:
        blocks:
            # display a dashboard block
            - { position: right, type: sonata.admin.block.admin_list }
            

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

        sonata.block.service.text:
        sonata.block.service.rss:
        

sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb
    class:                  # Entity Classes
        user:               Tabloz\UserBundle\Entity\User
        group:              Tabloz\UserBundle\Entity\Group
    table:
        user_group: "tabloz_user_group"

    profile:  # Profile Form (firstname, lastname, etc ...)
        form:
            type:               tabloz_user_profile
        
        
sonata_media:
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}
                
        user:
            providers:
                - sonata.media.provider.image
            formats:
                small: { width: 50 , quality: 70}
                medium:   { width: 100 , quality: 100}
                big:   { width: 250 , quality: 100}
                
        blog_post:
            providers:
                - sonata.media.provider.image
            formats:
                small: { width: 200 , quality: 70}
                medium:   { width: 400 , quality: 100}
                big:   { width: 700 , quality: 100}
                
        tablo:
            download:
                strategy: sonata.media.security.tablo_strategy
            providers:
                - sonata.media.provider.tablo
            formats:
                square-thumb:  { width: 100 , height: 100 , quality: 70}
                small:  { width: 100 , height: 100 , quality: 70}
                medium: { width: 300 , height: 300 , quality: 70}
                large:    { width: 700 , height: 700 , quality: 70}
                x-large:   { width: 1000 , height: 1000 , quality: 70}
                
        product:
            providers:
                - sonata.media.provider.image
            formats:
                small: { width: 200 , quality: 70}
                medium:   { width: 400 , quality: 100}
                
        account:
            providers:
                - sonata.media.provider.image
            formats:
                small: { width: 100 , quality: 70}
                medium:   { width: 200 , quality: 100}

    cdn:
        server:
            path: uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false
    providers:
        image:
            resizer: sonata.media.resizer.square
            
sonata_formatter:
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig

        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig

        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig

        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig

        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions       